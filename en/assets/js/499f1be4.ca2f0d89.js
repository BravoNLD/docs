"use strict";(self.webpackChunkevcc_docs=self.webpackChunkevcc_docs||[]).push([[5339],{11134:(e,n,t)=>{t.d(n,{ZP:()=>d});var a=t(85893),s=t(11151);function r(e){const n={a:"a",admonition:"admonition",p:"p",...(0,s.a)(),...e.components};return(0,a.jsx)(n.admonition,{title:"Sponsor Token Required",type:"tip",children:(0,a.jsxs)(n.p,{children:["More information on \ud83d\udc9a evcc Sponsorship can be found ",(0,a.jsx)(n.a,{href:"/docs/sponsorship",children:"here"}),"."]})})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(r,{...e})}):r(e)}},28168:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>p,default:()=>y,frontMatter:()=>m,metadata:()=>c,toc:()=>h});var a=t(85893),s=t(11151),r=t(74866),d=t(85162),l=t(73304),i=t(38106),o=t(11134);const m={sidebar_position:2},p="Meters / Site",c={id:"devices/meters",title:"Meters / Site",description:"The devices on this page can all be used as energy measuring points (meter) for various purposes:",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/devices/meters.mdx",sourceDirName:"devices",slug:"/devices/meters",permalink:"/en/docs/devices/meters",draft:!1,unlisted:!1,editUrl:"https://github.com/evcc-io/docs/tree/main/i18n/en/docusaurus-plugin-content-docs/current/devices/meters.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Chargers",permalink:"/en/docs/devices/chargers"},next:{title:"Vehicles",permalink:"/en/docs/devices/vehicles"}},u={},h=[{value:"Features",id:"features",level:4},{value:"Filter by feature",id:"filter-by-feature",level:4},{value:"ABB A43, A44, B23, B24",id:"abb-a43-a44-b23-b24",level:2},{value:"Acrel ADW300 Wireless Metering Meter",id:"acrel-adw300-wireless-metering-meter",level:2},{value:"Ads-tec StoraXe",id:"ads-tec-storaxe",level:2},{value:"Alpha ESS Storion SMILE",id:"alpha-ess-storion-smile",level:2},{value:"Anker Micro inverter",id:"anker-micro-inverter",level:2},{value:"APsystems EZ1",id:"apsystems-ez1",level:2},{value:"Bernecker Engineering MPM3PM",id:"bernecker-engineering-mpm3pm",level:2},{value:"Bosswerk Micro inverter",id:"bosswerk-micro-inverter",level:2},{value:"Carlo Gavazzi",id:"carlo-gavazzi",level:2},{value:"EM/ET 330/340",id:"emet-330340",level:3},{value:"EM24",id:"em24",level:3},{value:"cFos PowerBrain Meter",id:"cfos-powerbrain-meter",level:2},{value:"Deye",id:"deye",level:2},{value:"3p hybrid inverter",id:"3p-hybrid-inverter",level:3},{value:"Micro inverter",id:"micro-inverter",level:3},{value:"Storage (hybrid) inverter",id:"storage-hybrid-inverter",level:3},{value:"String inverter",id:"string-inverter",level:3},{value:"Discovergy",id:"discovergy",level:2},{value:"DSMR",id:"dsmr",level:2},{value:"DZG DVH4013",id:"dzg-dvh4013",level:2},{value:"E3/DC",id:"e3dc",level:2},{value:"Eastron",id:"eastron",level:2},{value:"SDM120-Modbus",id:"sdm120-modbus",level:3},{value:"SDM220/230",id:"sdm220230",level:3},{value:"SDM630-Modbus",id:"sdm630-modbus",level:3},{value:"SDM72D-M",id:"sdm72d-m",level:3},{value:"SDM72DM-V2",id:"sdm72dm-v2",level:3},{value:"Enphase IQ Envoy",id:"enphase-iq-envoy",level:2},{value:"ESPHome DSMR",id:"esphome-dsmr",level:2},{value:"FENECON",id:"fenecon",level:2},{value:"FoxESS",id:"foxess",level:2},{value:"H1 Series Hybrid Inverter",id:"h1-series-hybrid-inverter",level:3},{value:"H3 Series Hybrid Inverter",id:"h3-series-hybrid-inverter",level:3},{value:"Fronius",id:"fronius",level:2},{value:"Ohmpilot",id:"ohmpilot",level:3},{value:"Primo GEN24 Plus",id:"primo-gen24-plus",level:3},{value:"Solar API V1",id:"solar-api-v1",level:3},{value:"Symo GEN24 Plus",id:"symo-gen24-plus",level:3},{value:"Ginlong",id:"ginlong",level:2},{value:"Solis Hybrid Inverter",id:"solis-hybrid-inverter",level:3},{value:"Solis Inverter",id:"solis-inverter",level:3},{value:"go-e Controller",id:"go-e-controller",level:2},{value:"GoodWe",id:"goodwe",level:2},{value:"ET/EH/BH/BT Hybrid Inverter",id:"etehbhbt-hybrid-inverter",level:3},{value:"GoodWe over Wifi",id:"goodwe-over-wifi",level:3},{value:"Growatt",id:"growatt",level:2},{value:"Hybrid Inverter",id:"hybrid-inverter",level:3},{value:"TL-X(H) Hybrid Inverter",id:"tl-xh-hybrid-inverter",level:3},{value:"HomeWizard Wi-Fi P1 Meter",id:"homewizard-wi-fi-p1-meter",level:2},{value:"Hoymiles",id:"hoymiles",level:2},{value:"HM &amp; HMS Series (via AhoyDTU)",id:"hm--hms-series-via-ahoydtu",level:3},{value:"HM &amp; HMS Series (via OpenDTU)",id:"hm--hms-series-via-opendtu",level:3},{value:"Huawei",id:"huawei",level:2},{value:"SmartLogger",id:"smartlogger",level:3},{value:"SUN2000 via RS485 Modbus",id:"sun2000-via-rs485-modbus",level:3},{value:"SUN2000 with SDongle",id:"sun2000-with-sdongle",level:3},{value:"SUN2000 with SDongle &amp; Power Sensor",id:"sun2000-with-sdongle--power-sensor",level:3},{value:"IGEN Tech Solarman Logger",id:"igen-tech-solarman-logger",level:2},{value:"inepro PRO380-MOD",id:"inepro-pro380-mod",level:2},{value:"Janitza B series, UMG series",id:"janitza-b-series-umg-series",level:2},{value:"KEBA KeContact E10",id:"keba-kecontact-e10",level:2},{value:"Kostal",id:"kostal",level:2},{value:"Piko (legacy)",id:"piko-legacy",level:3},{value:"Piko Hybrid",id:"piko-hybrid",level:3},{value:"Piko MP Plus",id:"piko-mp-plus",level:3},{value:"Piko, Piko BA",id:"piko-piko-ba",level:3},{value:"Plenticore Hybrid",id:"plenticore-hybrid",level:3},{value:"Smart Energy Meter",id:"smart-energy-meter",level:3},{value:"Smart Energy Meter (via inverter)",id:"smart-energy-meter-via-inverter",level:3},{value:"LG ESS Home 8/10",id:"lg-ess-home-810",level:2},{value:"Loxone Miniserver",id:"loxone-miniserver",level:2},{value:"M-TEC",id:"m-tec",level:2},{value:"Energy Butler GEN2",id:"energy-butler-gen2",level:3},{value:"Energy Butler GEN3",id:"energy-butler-gen3",level:3},{value:"my-PV",id:"my-pv",level:2},{value:"AC ELWA 2",id:"ac-elwa-2",level:3},{value:"AC ELWA-E",id:"ac-elwa-e",level:3},{value:"AC\u2022THOR",id:"acthor",level:3},{value:"WiFi Meter",id:"wifi-meter",level:3},{value:"OpenEMS",id:"openems",level:2},{value:"Orno OR-WE-516, OR-WE-517",id:"orno-or-we-516-or-we-517",level:2},{value:"P1Monitor P1 Monitor",id:"p1monitor-p1-monitor",level:2},{value:"Plexlog",id:"plexlog",level:2},{value:"Powerdog",id:"powerdog",level:2},{value:"Powerfox Poweropti",id:"powerfox-poweropti",level:2},{value:"Qcells Q.HOME ESS HYB-G3",id:"qcells-qhome-ess-hyb-g3",level:2},{value:"RCT Power",id:"rct-power",level:2},{value:"Saia-Burgess Controls ALE3, AWD3",id:"saia-burgess-controls-ale3-awd3",level:2},{value:"SAJ H2 Series Hybrid Solar Inverter",id:"saj-h2-series-hybrid-solar-inverter",level:2},{value:"SAX Homespeicher",id:"sax-homespeicher",level:2},{value:"Schneider Electric iEM3xxx Modbus",id:"schneider-electric-iem3xxx-modbus",level:2},{value:"SENEC .Home",id:"senec-home",level:2},{value:"Senergy SE 4/5/6KTL-S1/G2 Inverter",id:"senergy-se-456ktl-s1g2-inverter",level:2},{value:"Shelly",id:"shelly",level:2},{value:"3EM",id:"3em",level:3},{value:"Pro 3 EM",id:"pro-3-em",level:3},{value:"Siemens",id:"siemens",level:2},{value:"7KT1665",id:"7kt1665",level:3},{value:"PAC 2200",id:"pac-2200",level:3},{value:"SMA",id:"sma",level:2},{value:"Data Manager",id:"data-manager",level:3},{value:"Energy Meter",id:"energy-meter",level:3},{value:"Inverter (Speedwire)",id:"inverter-speedwire",level:3},{value:"Smart Energy Hybrid Inverter",id:"smart-energy-hybrid-inverter",level:3},{value:"Sunny Boy Storage (Modbus)",id:"sunny-boy-storage-modbus",level:3},{value:"Sunny Home Manager 2.0",id:"sunny-home-manager-20",level:3},{value:"Sunny Island (Modbus)",id:"sunny-island-modbus",level:3},{value:"WebBox",id:"webbox",level:3},{value:"Wechselrichter (Modbus)",id:"wechselrichter-modbus",level:3},{value:"Smartfox",id:"smartfox",level:2},{value:"Pro, Pro 2, Pro Light, Pro Light 2, Light, Reg, Reg extended",id:"pro-pro-2-pro-light-pro-light-2-light-reg-reg-extended",level:3},{value:"Pro, Pro 2, Pro Light, Pro Light 2, Light, Reg, Reg extended (EM2 firmware)",id:"pro-pro-2-pro-light-pro-light-2-light-reg-reg-extended-em2-firmware",level:3},{value:"SofarSolar",id:"sofarsolar",level:2},{value:"HYD 3\u20266K-EP",id:"hyd-36k-ep",level:3},{value:"HYD 5\u202620K-3PH",id:"hyd-520k-3ph",level:3},{value:"Inverter, Hybrid Inverter",id:"inverter-hybrid-inverter",level:3},{value:"SOFAR 5\u202624KTL-G3",id:"sofar-524ktl-g3",level:3},{value:"SOFAR 80\u2026136KTL",id:"sofar-80136ktl",level:3},{value:"Solaranzeige Solaranzeige",id:"solaranzeige-solaranzeige",level:2},{value:"SolarEdge",id:"solaredge",level:2},{value:"Hybrid Inverter",id:"hybrid-inverter-1",level:3},{value:"Inverter",id:"inverter",level:3},{value:"Solarlog",id:"solarlog",level:2},{value:"SolarMax",id:"solarmax",level:2},{value:"MAX.STORAGE / MAX.STORAGE Ultimate",id:"maxstorage--maxstorage-ultimate",level:3},{value:"SP Series Inverter",id:"sp-series-inverter",level:3},{value:"Solarwatt",id:"solarwatt",level:2},{value:"EnergyManager, EnergyManager Pro",id:"energymanager-energymanager-pro",level:3},{value:"MyReserve",id:"myreserve",level:3},{value:"MyReserve Matrix (LAN oder PowerGateway)",id:"myreserve-matrix-lan-oder-powergateway",level:3},{value:"Solax",id:"solax",level:2},{value:"Hybrid X1/X3 G3/G4",id:"hybrid-x1x3-g3g4",level:3},{value:"Hybrid-Inverter (Cloud)",id:"hybrid-inverter-cloud",level:3},{value:"Inverter (Cloud)",id:"inverter-cloud",level:3},{value:"Sonnen",id:"sonnen",level:2},{value:"comfort, eco 5, eco 6, oem 6.5",id:"comfort-eco-5-eco-6-oem-65",level:3},{value:"sonnenBatterie",id:"sonnenbatterie",level:3},{value:"Steca coolcept fleX",id:"steca-coolcept-flex",level:2},{value:"Sungrow",id:"sungrow",level:2},{value:"SG Series Inverter",id:"sg-series-inverter",level:3},{value:"SH Series Hybrid Inverter",id:"sh-series-hybrid-inverter",level:3},{value:"Sunsynk",id:"sunsynk",level:2},{value:"3p hybrid inverter",id:"3p-hybrid-inverter-1",level:3},{value:"Micro inverter",id:"micro-inverter-1",level:3},{value:"Storage (hybrid) inverter",id:"storage-hybrid-inverter-1",level:3},{value:"String inverter",id:"string-inverter-1",level:3},{value:"Tesla Powerwall",id:"tesla-powerwall",level:2},{value:"Tibber Pulse",id:"tibber-pulse",level:2},{value:"TQ",id:"tq",level:2},{value:"Energy Manager EM2xx/EM3xx",id:"energy-manager-em2xxem3xx",level:3},{value:"Energy Manager EM420",id:"energy-manager-em420",level:3},{value:"VARTA pulse, pulse neo, element",id:"varta-pulse-pulse-neo-element",level:2},{value:"Victron Energy",id:"victron-energy",level:2},{value:"Youless Energy Monitor",id:"youless-energy-monitor",level:2},{value:"ZCS Azzurro Inverter, Hybrid Inverter",id:"zcs-azzurro-inverter-hybrid-inverter",level:2},{value:"Zuidwijk SlimmeLezer(+)",id:"zuidwijk-slimmelezer",level:2},{value:"Generic support",id:"generic-support",level:2},{value:"Custom",id:"custom",level:3},{value:"SunSpec Battery (Model 124)",id:"sunspec-battery-model-124",level:3},{value:"SunSpec Battery (Model 802)",id:"sunspec-battery-model-802",level:3},{value:"SunSpec Hybrid Inverter",id:"sunspec-hybrid-inverter",level:3},{value:"SunSpec Inverter",id:"sunspec-inverter",level:3},{value:"Volksz\xe4hler",id:"volksz\xe4hler",level:3},{value:"HTTP API",id:"http-api",level:4},{value:"HTTP API, Import &amp; Export",id:"http-api-import--export",level:4},{value:"WebSocket API",id:"websocket-api",level:4},{value:"vzlogger",id:"vzlogger",level:3},{value:"Switchable sockets",id:"switchable-sockets",level:2},{value:"AVM FritzDECT",id:"avm-fritzdect",level:3},{value:"Homematic IP",id:"homematic-ip",level:3},{value:"myStrom Switch",id:"mystrom-switch",level:3},{value:"Shelly 1PM, EM, Plug S",id:"shelly-1pm-em-plug-s",level:3},{value:"Tasmota (1 Phase Meter)",id:"tasmota-1-phase-meter",level:3},{value:"Tasmota three phase",id:"tasmota-three-phase",level:3},{value:"TP-Link",id:"tp-link",level:3},{value:"H-Series Smart Plug",id:"h-series-smart-plug",level:4},{value:"Tapo P-Series Smart Plug",id:"tapo-p-series-smart-plug",level:4}];function g(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"meters--site",children:"Meters / Site"}),"\n",(0,a.jsxs)(n.p,{children:["The devices on this page can all be used as energy measuring points (",(0,a.jsx)(n.code,{children:"meter"}),") for various purposes:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"grid"}),": Grid supply"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"pv"}),": Solar power"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"battery"}),": House battery"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"charge"}),": Charging power at the wallbox"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"aux"}),": Smart consumer with its own surplus regulation"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The configuration is formatted as follows:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: grid1\n    type: ...\n  - name: pv1\n    type: ...\n  - name: battery1\n    type: ...\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Once you have adapted the code samples to suit your meters in ",(0,a.jsx)(n.code,{children:"evcc.yaml"}),", you can test the connection using the ",(0,a.jsx)(n.code,{children:"evcc meter"})," command, which returns the current status of all connected meters.\nIf you just want to test one meter at a time, use ",(0,a.jsx)(n.code,{children:"evcc meter --name my_meter"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"$ ./evcc meter\n\ngrid\n-----\nPower:          -31W\nEnergy:         5195.5kWh\nCurrent L1..L3: 3.05A 1.07A 1.15A\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:'Most components used in modern Solar / Battery installations, especially inverters and battery storage (but also some metering devices!) have support for the relatively standardised "SunSpec" data model, which can be queried via Modbus/TCP without requiring device-specific data registers.\nIf your system isn\'t listed here, that might mean that it is 100% SunSpec-compatible, so try that as your first port of call. (You may need to enable network support on your device - check the manual)'})}),"\n",(0,a.jsx)(n.h4,{id:"features",children:"Features"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"active battery control"}),": Passive battery control is possible with all home batteries. The charging of the vehicle is dynamically adjusted depending on the charge level of the house battery. If the house battery supports ",(0,a.jsx)(n.strong,{children:"active control"}),", further optimizations can be made. Currently, a home battery discharge lock is implemented when fast charging a vehicle."]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"filter-by-feature",children:"Filter by feature"}),"\n",(0,a.jsx)(i.Z,{device:"meter"}),"\n",(0,a.jsx)(n.h2,{id:"abb-a43-a44-b23-b24",children:"ABB A43, A44, B23, B24"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: abb-ab\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_charger\n    type: template\n    template: abb-ab\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"acrel-adw300-wireless-metering-meter",children:"Acrel ADW300 Wireless Metering Meter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: acrel-adw300\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 1200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: acrel-adw300\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 1200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_charger\n    type: template\n    template: acrel-adw300\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 1200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"ads-tec-storaxe",children:"Ads-tec StoraXe"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: storaxe\n    usage: battery\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 2\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"})}),"\n",(0,a.jsx)(n.h2,{id:"alpha-ess-storion-smile",children:"Alpha ESS Storion SMILE"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: alpha-ess-smile\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 85\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 85\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 85\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: alpha-ess-smile\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 85\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 85\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 85\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: alpha-ess-smile\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 85\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 85\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 85\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"anker-micro-inverter",children:"Anker Micro inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: deye-mi\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})}),"\n",(0,a.jsx)(n.h2,{id:"apsystems-ez1",children:"APsystems EZ1"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: apsystems-ez1\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"})}),"\n",(0,a.jsx)(n.h2,{id:"bernecker-engineering-mpm3pm",children:"Bernecker Engineering MPM3PM"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: mpm3pm\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_charger\n    type: template\n    template: mpm3pm\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"bosswerk-micro-inverter",children:"Bosswerk Micro inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: deye-mi\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})}),"\n",(0,a.jsx)(n.h2,{id:"carlo-gavazzi",children:"Carlo Gavazzi"}),"\n",(0,a.jsx)(n.h3,{id:"emet-330340",children:"EM/ET 330/340"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: cg-emt3xx\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_charger\n    type: template\n    template: cg-emt3xx\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"em24",children:"EM24"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: cg-em24\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_charger\n    type: template\n    template: cg-em24\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"cfos-powerbrain-meter",children:"cFos PowerBrain Meter"}),"\n",(0,a.jsx)(l.Z,{features:"sponsorship"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_charger\n    type: template\n    template: cfos\n    usage: charge\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 2\n    host: 192.0.2.2 # Hostname\n    port: 4702 # Port \n"})}),"\n",(0,a.jsx)(o.ZP,{}),"\n",(0,a.jsx)(n.h2,{id:"deye",children:"Deye"}),"\n",(0,a.jsx)(n.h3,{id:"3p-hybrid-inverter",children:"3p hybrid inverter"}),"\n",(0,a.jsx)(l.Z,{features:"battery-control"}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: deye-hybrid-3p\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: deye-hybrid-3p\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: deye-hybrid-3p\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"micro-inverter",children:"Micro inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: deye-mi\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})}),"\n",(0,a.jsx)(n.h3,{id:"storage-hybrid-inverter",children:"Storage (hybrid) inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"pv",label:"PV",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: deye-storage\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: deye-storage\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"grid",label:"Netz",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: deye-storage\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"string-inverter",children:"String inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: deye-string\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})}),"\n",(0,a.jsx)(n.h2,{id:"discovergy",children:"Discovergy"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: discovergy\n    usage: grid\n    user: # User account (e.g. email address, user id, etc.)\n    password: # Password of the user account (use single quotes in case of leading zeros)\n    meter: 1ESY1161229886 \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: discovergy\n    usage: pv\n    user: # User account (e.g. email address, user id, etc.)\n    password: # Password of the user account (use single quotes in case of leading zeros)\n    meter: 1ESY1161229886 \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"dsmr",children:"DSMR"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: dsmr\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 1502 # Port (optional) \n"})}),"\n",(0,a.jsx)(n.h2,{id:"dzg-dvh4013",children:"DZG DVH4013"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_charger\n    type: template\n    template: dzg\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})}),"\n",(0,a.jsx)(n.h2,{id:"e3dc",children:"E3/DC"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: e3dc\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: e3dc\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: e3dc\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"eastron",children:"Eastron"}),"\n",(0,a.jsx)(n.h3,{id:"sdm120-modbus",children:"SDM120-Modbus"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: eastron-sdm120\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_charger\n    type: template\n    template: eastron-sdm120\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: eastron-sdm120\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"sdm220230",children:"SDM220/230"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: eastron-sdm220_230\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_charger\n    type: template\n    template: eastron-sdm220_230\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"sdm630-modbus",children:"SDM630-Modbus"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: eastron\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_charger\n    type: template\n    template: eastron\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"sdm72d-m",children:"SDM72D-M"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: eastron-sdm72\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_charger\n    type: template\n    template: eastron-sdm72\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"sdm72dm-v2",children:"SDM72DM-V2"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: eastron\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_charger\n    type: template\n    template: eastron\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"enphase-iq-envoy",children:"Enphase IQ Envoy"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.p,{children:'Only batteries of type "AC Battery" are currently supported by Enphase-API.'}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: enphase\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    token: # Required if Envoy Firmware D7.x.xxx. Token is valid for one year. Instructions for obtaining a token via web UI: https://enphase.com/download/accessing-iq-gateway-local-apis-or-local-ui-token-based-authentication (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: enphase\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    token: # Required if Envoy Firmware D7.x.xxx. Token is valid for one year. Instructions for obtaining a token via web UI: https://enphase.com/download/accessing-iq-gateway-local-apis-or-local-ui-token-based-authentication (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: enphase\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    token: # Required if Envoy Firmware D7.x.xxx. Token is valid for one year. Instructions for obtaining a token via web UI: https://enphase.com/download/accessing-iq-gateway-local-apis-or-local-ui-token-based-authentication (optional) \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"esphome-dsmr",children:"ESPHome DSMR"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: slimmelezer\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"})}),"\n",(0,a.jsx)(n.h2,{id:"fenecon",children:"FENECON"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: openems\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: openems\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: openems\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"foxess",children:"FoxESS"}),"\n",(0,a.jsx)(n.h3,{id:"h1-series-hybrid-inverter",children:"H1 Series Hybrid Inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"pv",label:"PV",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: fox-ess-h1\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: fox-ess-h1\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"h3-series-hybrid-inverter",children:"H3 Series Hybrid Inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: fox-ess-h3\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: fox-ess-h3\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: fox-ess-h3\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"fronius",children:"Fronius"}),"\n",(0,a.jsx)(n.h3,{id:"ohmpilot",children:"Ohmpilot"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_aux\n    type: template\n    template: fronius-ohmpilot\n    usage: aux\n    host: 192.0.2.2 # IP address or hostname \n"})}),"\n",(0,a.jsx)(n.h3,{id:"primo-gen24-plus",children:"Primo GEN24 Plus"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: fronius-gen24\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: fronius-gen24\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: fronius-gen24\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"solar-api-v1",children:"Solar API V1"}),"\n",(0,a.jsx)(l.Z,{features:"battery-control"}),"\n",(0,a.jsx)(n.p,{children:"Username and password are only required for active battery control."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Attention"}),': Active battery control should only be used if no other settings for time-dependent battery control were made in the inverter configuration under "Energy Management" - "Battery Management", as existing settings will be overwritten.']}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: fronius-solarapi-v1\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    user: customer # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: fronius-solarapi-v1\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    user: customer # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: fronius-solarapi-v1\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    user: customer # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"symo-gen24-plus",children:"Symo GEN24 Plus"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: fronius-gen24\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: fronius-gen24\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: fronius-gen24\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"ginlong",children:"Ginlong"}),"\n",(0,a.jsx)(n.h3,{id:"solis-hybrid-inverter",children:"Solis Hybrid Inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: solis-hybrid\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: solis-hybrid\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: solis-hybrid\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"solis-inverter",children:"Solis Inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: solis\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: solis\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"go-e-controller",children:"go-e Controller"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: go-e-controller\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: go-e-controller\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"goodwe",children:"GoodWe"}),"\n",(0,a.jsx)(n.h3,{id:"etehbhbt-hybrid-inverter",children:"ET/EH/BH/BT Hybrid Inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: goodwe-hybrid\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: goodwe-hybrid\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: goodwe-hybrid\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"goodwe-over-wifi",children:"GoodWe over Wifi"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: goodwe-wifi\n    usage: grid\n    uri: # HTTP(S) address (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: goodwe-wifi\n    usage: pv\n    uri: # HTTP(S) address (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: goodwe-wifi\n    usage: battery\n    uri: # HTTP(S) address (optional) \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"growatt",children:"Growatt"}),"\n",(0,a.jsx)(n.h3,{id:"hybrid-inverter",children:"Hybrid Inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: growatt-hybrid\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: growatt-hybrid\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: growatt-hybrid\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"tl-xh-hybrid-inverter",children:"TL-X(H) Hybrid Inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: growatt-hybrid-tlxh\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: growatt-hybrid-tlxh\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: growatt-hybrid-tlxh\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"homewizard-wi-fi-p1-meter",children:"HomeWizard Wi-Fi P1 Meter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: homewizard\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: homewizard\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"hoymiles",children:"Hoymiles"}),"\n",(0,a.jsx)(n.h3,{id:"hm--hms-series-via-ahoydtu",children:"HM & HMS Series (via AhoyDTU)"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: hoymiles-ahoydtu\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    id: 0 # optional \n"})}),"\n",(0,a.jsx)(n.h3,{id:"hm--hms-series-via-opendtu",children:"HM & HMS Series (via OpenDTU)"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: hoymiles-opendtu\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"})}),"\n",(0,a.jsx)(n.h2,{id:"huawei",children:"Huawei"}),"\n",(0,a.jsx)(n.h3,{id:"smartlogger",children:"SmartLogger"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: huawei-smartlogger\n    usage: grid\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    timeout: 15s # optional \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: huawei-smartlogger\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    timeout: 15s # optional \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: huawei-smartlogger\n    usage: battery\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    timeout: 15s # optional \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"sun2000-via-rs485-modbus",children:"SUN2000 via RS485 Modbus"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: huawei-sun2000-rs485\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: huawei-sun2000-rs485\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: huawei-sun2000-rs485\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"sun2000-with-sdongle",children:"SUN2000 with SDongle"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: huawei-dongle\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    timeout: 15s # optional \n"})}),"\n",(0,a.jsx)(n.h3,{id:"sun2000-with-sdongle--power-sensor",children:"SUN2000 with SDongle & Power Sensor"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: huawei-dongle-powersensor\n    usage: grid\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    timeout: 15s # optional \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: huawei-dongle-powersensor\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    timeout: 15s # optional \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: huawei-dongle-powersensor\n    usage: battery\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    timeout: 15s # optional \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"igen-tech-solarman-logger",children:"IGEN Tech Solarman Logger"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: solarman\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    user: admin # User account (e.g. email address, user id, etc.) (optional)\n    password: admin # Password of the user account (use single quotes in case of leading zeros) (optional) \n"})}),"\n",(0,a.jsx)(n.h2,{id:"inepro-pro380-mod",children:"inepro PRO380-MOD"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: inepro\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_charger\n    type: template\n    template: inepro\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"janitza-b-series-umg-series",children:"Janitza B series, UMG series"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: janitza\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_charger\n    type: template\n    template: janitza\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"keba-kecontact-e10",children:"KEBA KeContact E10"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: keba-kecontact\n    usage: grid\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"})}),"\n",(0,a.jsx)(n.h2,{id:"kostal",children:"Kostal"}),"\n",(0,a.jsx)(n.h3,{id:"piko-legacy",children:"Piko (legacy)"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: kostal-piko-legacy\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    user: # User account (e.g. email address, user id, etc.)\n    password: # Password of the user account (use single quotes in case of leading zeros) \n"})}),"\n",(0,a.jsx)(n.h3,{id:"piko-hybrid",children:"Piko Hybrid"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: kostal-piko-hybrid\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: kostal-piko-hybrid\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: kostal-piko-hybrid\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"piko-mp-plus",children:"Piko MP Plus"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: kostal-piko-mp-plus\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"})}),"\n",(0,a.jsx)(n.h3,{id:"piko-piko-ba",children:"Piko, Piko BA"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: kostal-piko-pv\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: kostal-piko-pv\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"plenticore-hybrid",children:"Plenticore Hybrid"}),"\n",(0,a.jsx)(l.Z,{features:"battery-control"}),"\n",(0,a.jsx)(n.p,{children:"Only a single system may access the inverter! For active battery control, the external battery control via Modbus must be activated using installer access."}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"pv",label:"PV",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: kostal-plenticore\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 71\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: kostal-plenticore\n    usage: battery\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 71\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"smart-energy-meter",children:"Smart Energy Meter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: kostal-ksem\n    usage: grid\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 71\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"})}),"\n",(0,a.jsx)(n.h3,{id:"smart-energy-meter-via-inverter",children:"Smart Energy Meter (via inverter)"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.p,{children:"The energy meter must be installed in sensor position 2 (grid connection). Sensor position 1 (House consumption) is not supported."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: kostal-ksem-inverter\n    usage: grid\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 71\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port \n"})}),"\n",(0,a.jsx)(n.h2,{id:"lg-ess-home-810",children:"LG ESS Home 8/10"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: lg-ess-home-8-10\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    password: # User password, see https://github.com/Morluktom/ioBroker.lg-ess-home/tree/master#getting-the-password. Alteratively, use registration id for admin login. (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: lg-ess-home-8-10\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    password: # User password, see https://github.com/Morluktom/ioBroker.lg-ess-home/tree/master#getting-the-password. Alteratively, use registration id for admin login. (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: lg-ess-home-8-10\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    password: # User password, see https://github.com/Morluktom/ioBroker.lg-ess-home/tree/master#getting-the-password. Alteratively, use registration id for admin login. (optional) \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"loxone-miniserver",children:"Loxone Miniserver"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: loxone\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    user: # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional)\n    meterblock: # Name from Loxone Config\n    socblock: # Name from Loxone Config, only for battery (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: loxone\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    user: # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional)\n    meterblock: # Name from Loxone Config\n    socblock: # Name from Loxone Config, only for battery (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: loxone\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    user: # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional)\n    meterblock: # Name from Loxone Config\n    socblock: # Name from Loxone Config, only for battery (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_charger\n    type: template\n    template: loxone\n    usage: charge\n    host: 192.0.2.2 # IP address or hostname\n    user: # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional)\n    meterblock: # Name from Loxone Config\n    socblock: # Name from Loxone Config, only for battery (optional) \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"m-tec",children:"M-TEC"}),"\n",(0,a.jsx)(n.h3,{id:"energy-butler-gen2",children:"Energy Butler GEN2"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: mtec-eb-gen2\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: mtec-eb-gen2\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: mtec-eb-gen2\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"energy-butler-gen3",children:"Energy Butler GEN3"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: mtec-eb-gen3\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: mtec-eb-gen3\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: mtec-eb-gen3\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"my-pv",children:"my-PV"}),"\n",(0,a.jsx)(n.h3,{id:"ac-elwa-2",children:"AC ELWA 2"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_aux\n    type: template\n    template: ac-elwa-2\n    usage: aux\n    host: 192.0.2.2 # IP address or hostname \n"})}),"\n",(0,a.jsx)(n.h3,{id:"ac-elwa-e",children:"AC ELWA-E"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_aux\n    type: template\n    template: ac-elwa-e\n    usage: aux\n    host: 192.0.2.2 # IP address or hostname \n"})}),"\n",(0,a.jsx)(n.h3,{id:"acthor",children:"AC\u2022THOR"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_aux\n    type: template\n    template: thor\n    usage: aux\n    host: 192.0.2.2 # IP address or hostname \n"})}),"\n",(0,a.jsx)(n.h3,{id:"wifi-meter",children:"WiFi Meter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: mypv-wifi-meter\n    usage: grid\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"})}),"\n",(0,a.jsx)(n.h2,{id:"openems",children:"OpenEMS"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: openems\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: openems\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: openems\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"orno-or-we-516-or-we-517",children:"Orno OR-WE-516, OR-WE-517"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: orno\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8E1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_charger\n    type: template\n    template: orno\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8E1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"p1monitor-p1-monitor",children:"P1Monitor P1 Monitor"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: p1monitor\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"})}),"\n",(0,a.jsx)(n.h2,{id:"plexlog",children:"Plexlog"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(n.p,{children:["The values are updated approximately every 15 seconds, hence the evcc ",(0,a.jsx)(n.code,{children:"interval"})," should not be less than 30 seconds."]}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: plexlog\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 503 # Port (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: plexlog\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    port: 503 # Port (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: plexlog\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    port: 503 # Port (optional) \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"powerdog",children:"Powerdog"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: powerdog\n    usage: grid\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: powerdog\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"powerfox-poweropti",children:"Powerfox Poweropti"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: powerfox-poweropti\n    usage: grid\n    user: # User account (e.g. email address, user id, etc.)\n    password: # Password of the user account (use single quotes in case of leading zeros) \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: powerfox-poweropti\n    usage: pv\n    user: # User account (e.g. email address, user id, etc.)\n    password: # Password of the user account (use single quotes in case of leading zeros) \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"qcells-qhome-ess-hyb-g3",children:"Qcells Q.HOME ESS HYB-G3"}),"\n",(0,a.jsx)(l.Z,{features:"battery-control"}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: solax\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 19200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: solax\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 19200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: solax\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 19200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"rct-power",children:"RCT Power"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: rct-power\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: rct-power\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: rct-power\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"saia-burgess-controls-ale3-awd3",children:"Saia-Burgess Controls ALE3, AWD3"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: sbc-axx3\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_charger\n    type: template\n    template: sbc-axx3\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"saj-h2-series-hybrid-solar-inverter",children:"SAJ H2 Series Hybrid Solar Inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: saj-h2\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 115200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: saj-h2\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 115200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: saj-h2\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 115200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"sax-homespeicher",children:"SAX Homespeicher"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: sax\n    usage: grid\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 64\n    host: 192.0.2.2 # Hostname\n    port: 3600 # Port \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: sax\n    usage: battery\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 64\n    host: 192.0.2.2 # Hostname\n    port: 3600 # Port \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"schneider-electric-iem3xxx-modbus",children:"Schneider Electric iEM3xxx Modbus"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: schneider-iem3000\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_charger\n    type: template\n    template: schneider-iem3000\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"senec-home",children:"SENEC .Home"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: senec-home\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    schema: https # optional \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: senec-home\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    schema: https # optional \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: senec-home\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    schema: https # optional \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"senergy-se-456ktl-s1g2-inverter",children:"Senergy SE 4/5/6KTL-S1/G2 Inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: senergy\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"})}),"\n",(0,a.jsx)(n.h2,{id:"shelly",children:"Shelly"}),"\n",(0,a.jsx)(n.h3,{id:"3em",children:"3EM"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: shelly-3em\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: shelly-3em\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_charger\n    type: template\n    template: shelly-3em\n    usage: charge\n    host: 192.0.2.2 # IP address or hostname \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"pro-3-em",children:"Pro 3 EM"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: shelly-pro-3em\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    user: # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: shelly-pro-3em\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    user: # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_charger\n    type: template\n    template: shelly-pro-3em\n    usage: charge\n    host: 192.0.2.2 # IP address or hostname\n    user: # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"siemens",children:"Siemens"}),"\n",(0,a.jsx)(n.h3,{id:"7kt1665",children:"7KT1665"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: siemens-7kt1665\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_charger\n    type: template\n    template: siemens-7kt1665\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"pac-2200",children:"PAC 2200"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: siemens-pac2200\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_charger\n    type: template\n    template: siemens-pac2200\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"sma",children:"SMA"}),"\n",(0,a.jsx)(n.h3,{id:"data-manager",children:"Data Manager"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.p,{children:'In the web interface of the SMA Data Manager you need to activate "Modbus Server activated" in the section "External communication".'}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: sma-data-manager\n    usage: grid\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 2\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: sma-data-manager\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 2\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: sma-data-manager\n    usage: battery\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 2\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"energy-meter",children:"Energy Meter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: sma-energy-meter\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: sma-energy-meter\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"inverter-speedwire",children:"Inverter (Speedwire)"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"pv",label:"PV",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: sma-inverter-speedwire\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    password: # Password for user group Standard (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: sma-inverter-speedwire\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    password: # Password for user group Standard (optional) \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"smart-energy-hybrid-inverter",children:"Smart Energy Hybrid Inverter"}),"\n",(0,a.jsx)(l.Z,{features:"battery-control"}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"pv",label:"PV",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: sma-hybrid\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 3\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: sma-hybrid\n    usage: battery\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 3\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"sunny-boy-storage-modbus",children:"Sunny Boy Storage (Modbus)"}),"\n",(0,a.jsx)(l.Z,{features:"battery-control"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: sma-sbs-modbus\n    usage: battery\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 3\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"})}),"\n",(0,a.jsx)(n.h3,{id:"sunny-home-manager-20",children:"Sunny Home Manager 2.0"}),"\n",(0,a.jsx)(l.Z,{features:"smahems"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: sma-home-manager\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"})}),"\n",(0,a.jsx)(n.h3,{id:"sunny-island-modbus",children:"Sunny Island (Modbus)"}),"\n",(0,a.jsx)(l.Z,{features:"battery-control"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: sma-si-modbus\n    usage: battery\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 3\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"})}),"\n",(0,a.jsx)(n.h3,{id:"webbox",children:"WebBox"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: sma-webbox\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 2\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"})}),"\n",(0,a.jsx)(n.h3,{id:"wechselrichter-modbus",children:"Wechselrichter (Modbus)"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: sma-inverter-modbus\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 3\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"})}),"\n",(0,a.jsx)(n.h2,{id:"smartfox",children:"Smartfox"}),"\n",(0,a.jsx)(n.h3,{id:"pro-pro-2-pro-light-pro-light-2-light-reg-reg-extended",children:"Pro, Pro 2, Pro Light, Pro Light 2, Light, Reg, Reg extended"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"aux"})," can be used for water heating power."]}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: smartfox\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: smartfox\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"aux",label:"AUX",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_aux\n    type: template\n    template: smartfox\n    usage: aux\n    host: 192.0.2.2 # IP address or hostname \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"pro-pro-2-pro-light-pro-light-2-light-reg-reg-extended-em2-firmware",children:"Pro, Pro 2, Pro Light, Pro Light 2, Light, Reg, Reg extended (EM2 firmware)"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"aux"})," can be used for water heating power."]}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: smartfox-em2\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: smartfox-em2\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"aux",label:"AUX",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_aux\n    type: template\n    template: smartfox-em2\n    usage: aux\n    host: 192.0.2.2 # IP address or hostname \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"sofarsolar",children:"SofarSolar"}),"\n",(0,a.jsx)(n.h3,{id:"hyd-36k-ep",children:"HYD 3\u20266K-EP"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.p,{children:"It is recommended to establish the connection via a LSE-3 logger stick using ModBus TCP (LSW-3 WiFi stick is not supported). If you are connecting via serial RS485 using the inverter's COM port and a proper adapter note that on the inverter's side you have to take care of a proper termination of the RS485 bus."}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: sofarsolar-g3\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: sofarsolar-g3\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: sofarsolar-g3\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"hyd-520k-3ph",children:"HYD 5\u202620K-3PH"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.p,{children:"It is recommended to establish the connection via a LSE-3 logger stick using ModBus TCP (LSW-3 WiFi stick is not supported). If you are connecting via serial RS485 using the inverter's COM port and a proper adapter note that on the inverter's side you have to take care of a proper termination of the RS485 bus."}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: sofarsolar-g3\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: sofarsolar-g3\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: sofarsolar-g3\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"inverter-hybrid-inverter",children:"Inverter, Hybrid Inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: sofarsolar\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: sofarsolar\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: sofarsolar\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"sofar-524ktl-g3",children:"SOFAR 5\u202624KTL-G3"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.p,{children:"It is recommended to establish the connection via a LSE-3 logger stick using ModBus TCP (LSW-3 WiFi stick is not supported). If you are connecting via serial RS485 using the inverter's COM port and a proper adapter note that on the inverter's side you have to take care of a proper termination of the RS485 bus."}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: sofarsolar-g3\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: sofarsolar-g3\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: sofarsolar-g3\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"sofar-80136ktl",children:"SOFAR 80\u2026136KTL"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.p,{children:"It is recommended to establish the connection via a LSE-3 logger stick using ModBus TCP (LSW-3 WiFi stick is not supported). If you are connecting via serial RS485 using the inverter's COM port and a proper adapter note that on the inverter's side you have to take care of a proper termination of the RS485 bus."}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: sofarsolar-g3\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: sofarsolar-g3\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: sofarsolar-g3\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 8899 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"solaranzeige-solaranzeige",children:"Solaranzeige Solaranzeige"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: solaranzeige\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname of the MQTT broker\n    port: 1883 # MQTT broker port (optional)\n    topic: solaranzeige/box1 # Topic (omit leading /) (optional)\n    timeout: 30s # Don't accept values older than this value (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: solaranzeige\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname of the MQTT broker\n    port: 1883 # MQTT broker port (optional)\n    topic: solaranzeige/box1 # Topic (omit leading /) (optional)\n    timeout: 30s # Don't accept values older than this value (optional) \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"solaredge",children:"SolarEdge"}),"\n",(0,a.jsx)(n.h3,{id:"hybrid-inverter-1",children:"Hybrid Inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.p,{children:'Only one system can and may have a Modbus TCP connection to the inverter at the same time!\nFor optional battery control, StorageConf_CtrlMode (0xE004) must be set to 4 "Remote".'}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: solaredge-hybrid\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    timeout: 10s # optional \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: solaredge-hybrid\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    timeout: 10s # optional \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: solaredge-hybrid\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    timeout: 10s # optional \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"inverter",children:"Inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.p,{children:"Only one system may access the inverter!"}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: solaredge-inverter\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    timeout: 10s # optional \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: solaredge-inverter\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    timeout: 10s # optional \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"solarlog",children:"Solarlog"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.p,{children:"We recommend to use this device for grid power values only, if no other device is available providing this data.\nIf you have a home battery installed, please do not use this device at all for grid power values."}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: solarlog\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: solarlog\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"solarmax",children:"SolarMax"}),"\n",(0,a.jsx)(n.h3,{id:"maxstorage--maxstorage-ultimate",children:"MAX.STORAGE / MAX.STORAGE Ultimate"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: solarmax-maxstorage\n    usage: grid\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: solarmax-maxstorage\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: solarmax-maxstorage\n    usage: battery\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"sp-series-inverter",children:"SP Series Inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: senergy\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"})}),"\n",(0,a.jsx)(n.h2,{id:"solarwatt",children:"Solarwatt"}),"\n",(0,a.jsx)(n.h3,{id:"energymanager-energymanager-pro",children:"EnergyManager, EnergyManager Pro"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: solarwatt\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: solarwatt\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: solarwatt\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"myreserve",children:"MyReserve"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: solarwatt\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: solarwatt\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: solarwatt\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"myreserve-matrix-lan-oder-powergateway",children:"MyReserve Matrix (LAN oder PowerGateway)"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: solarwatt-myreserve-matrix\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 8080 # Port (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: solarwatt-myreserve-matrix\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    port: 8080 # Port (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: solarwatt-myreserve-matrix\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    port: 8080 # Port (optional) \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"solax",children:"Solax"}),"\n",(0,a.jsx)(n.h3,{id:"hybrid-x1x3-g3g4",children:"Hybrid X1/X3 G3/G4"}),"\n",(0,a.jsx)(l.Z,{features:"battery-control"}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: solax\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 19200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: solax\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 19200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: solax\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 19200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"hybrid-inverter-cloud",children:"Hybrid-Inverter (Cloud)"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.p,{children:"The Solax hybrid inverter has to be registered in the SolaxCloud."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Attention"}),": Values can only be fetched every 150s and then also can be 5 minutes old. Charging by PV will not be optimal because of this! Only use as fallback if no local access is available."]}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: solax-hybrid-cloud\n    usage: grid\n    tokenid: # Go to https://www.solaxcloud.com/#/api and take the value of "ObtaintokenID".\n    serial: # Go to https://www.solaxcloud.com/#/inverter and take the value of registration number. \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: solax-hybrid-cloud\n    usage: pv\n    tokenid: # Go to https://www.solaxcloud.com/#/api and take the value of "ObtaintokenID".\n    serial: # Go to https://www.solaxcloud.com/#/inverter and take the value of registration number. \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: solax-hybrid-cloud\n    usage: battery\n    tokenid: # Go to https://www.solaxcloud.com/#/api and take the value of "ObtaintokenID".\n    serial: # Go to https://www.solaxcloud.com/#/inverter and take the value of registration number. \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"inverter-cloud",children:"Inverter (Cloud)"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.p,{children:"The Solax inverter has to be registered in the SolaxCloud."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Attention"}),": Values can only be fetched every 150s and then also can be 5 minutes old. Charging by PV will not be optimal because of this! Only use as fallback if no local access is available."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: solax-inverter-cloud\n    usage: pv\n    tokenid: # Use the ObtaintokenID from https://www.solaxcloud.com/#/api.\n    serial: # Use the registration number from https://www.solaxcloud.com/#/inverter. \n"})}),"\n",(0,a.jsx)(n.h2,{id:"sonnen",children:"Sonnen"}),"\n",(0,a.jsx)(n.h3,{id:"comfort-eco-5-eco-6-oem-65",children:"comfort, eco 5, eco 6, oem 6.5"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: sonnenbatterie-eco56\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 7979 # Port (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: sonnenbatterie-eco56\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    port: 7979 # Port (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: sonnenbatterie-eco56\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    port: 7979 # Port (optional) \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"sonnenbatterie",children:"sonnenBatterie"}),"\n",(0,a.jsx)(l.Z,{features:"battery-control"}),"\n",(0,a.jsxs)(n.p,{children:['For active battery control, the "JSON Write API" must be activated via the sonnenBatterie web interface (under Software-Integration) and the API token generated there must be entered in the battery configuration under ',(0,a.jsx)(n.code,{children:"token"}),"."]}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: sonnenbatterie\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 8080 # Port (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: sonnenbatterie\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    port: 8080 # Port (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: sonnenbatterie\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    port: 8080 # Port (optional)\n    token: # API Token (required for active battery control) (optional) \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"steca-coolcept-flex",children:"Steca coolcept fleX"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: kostal-piko-mp-plus\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"})}),"\n",(0,a.jsx)(n.h2,{id:"sungrow",children:"Sungrow"}),"\n",(0,a.jsx)(n.h3,{id:"sg-series-inverter",children:"SG Series Inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: sungrow-inverter\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: sungrow-inverter\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"sh-series-hybrid-inverter",children:"SH Series Hybrid Inverter"}),"\n",(0,a.jsx)(l.Z,{features:"battery-control"}),"\n",(0,a.jsx)(n.p,{children:"The connection can be serial (RS485) or via the native (rear) LAN socket on the inverter. Connections via the WiNet-S dongle (WiFi or LAN) do NOT work correctly."}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: sungrow-hybrid\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    timeout: 10s # optional \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: sungrow-hybrid\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    timeout: 10s # optional \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: sungrow-hybrid\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    timeout: 10s # optional \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"sunsynk",children:"Sunsynk"}),"\n",(0,a.jsx)(n.h3,{id:"3p-hybrid-inverter-1",children:"3p hybrid inverter"}),"\n",(0,a.jsx)(l.Z,{features:"battery-control"}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: deye-hybrid-3p\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: deye-hybrid-3p\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: deye-hybrid-3p\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"micro-inverter-1",children:"Micro inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: deye-mi\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})}),"\n",(0,a.jsx)(n.h3,{id:"storage-hybrid-inverter-1",children:"Storage (hybrid) inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"pv",label:"PV",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: deye-storage\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: deye-storage\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"grid",label:"Netz",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: deye-storage\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"string-inverter-1",children:"String inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: deye-string\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})}),"\n",(0,a.jsx)(n.h2,{id:"tesla-powerwall",children:"Tesla Powerwall"}),"\n",(0,a.jsx)(l.Z,{features:"battery-control"}),"\n",(0,a.jsxs)(n.p,{children:["To use the optional battery control you need to generate a ",(0,a.jsx)(n.code,{children:"refresh"})," token for communicating with the Tesla API."]}),"\n",(0,a.jsx)(n.p,{children:"The following apps allow to create the token:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://apps.apple.com/us/app/auth-app-for-tesla/id1552058613#?platform=iphone",children:"Auth app for Tesla (iOS)"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://play.google.com/store/apps/details?id=net.leveugle.teslatokens",children:"Tesla Tokens (Android)"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/adriankumpf/tesla_auth",children:"Tesla Auth (macOS, Linux)"})}),"\n"]}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: tesla-powerwall\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    password: # Password of the user "customer". By default this is the last 5 characters of password stated on the Tesla Gateway.\n    refreshToken: # See https://docs.evcc.io/en/docs/devices/meters#tesla-powerwall (optional)\n    siteId: # optional product identifier of the energy site, use to override autodectction (optional) \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: tesla-powerwall\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    password: # Password of the user "customer". By default this is the last 5 characters of password stated on the Tesla Gateway.\n    refreshToken: # See https://docs.evcc.io/en/docs/devices/meters#tesla-powerwall (optional)\n    siteId: # optional product identifier of the energy site, use to override autodectction (optional) \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: tesla-powerwall\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    password: # Password of the user "customer". By default this is the last 5 characters of password stated on the Tesla Gateway.\n    refreshToken: # See https://docs.evcc.io/en/docs/devices/meters#tesla-powerwall (optional)\n    siteId: # optional product identifier of the energy site, use to override autodectction (optional) \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"tibber-pulse",children:"Tibber Pulse"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: tibber-pulse\n    usage: grid\n    token: 5K4MVS-OjfWhK_4yrjOlFe1F6kJXPVf7eQYggo8ebAE\n    homeid: 96a14971-525a-4420-aae9-e5aedaa129ff # optional \n"})}),"\n",(0,a.jsx)(n.h2,{id:"tq",children:"TQ"}),"\n",(0,a.jsx)(n.h3,{id:"energy-manager-em2xxem3xx",children:"Energy Manager EM2xx/EM3xx"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: tq-em\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 80 # Port (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n"})}),"\n",(0,a.jsx)(n.h3,{id:"energy-manager-em420",children:"Energy Manager EM420"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: tq-em420\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 80 # Port (optional)\n    device: local # JSON-API -> Data Endpoint (optional)\n    token: ey... # Access token for EM420 (Create in Profile -> Access tokens) \n"})}),"\n",(0,a.jsx)(n.h2,{id:"varta-pulse-pulse-neo-element",children:"VARTA pulse, pulse neo, element"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.p,{children:"PV only available with PV sensor"}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: varta\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: varta\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: varta\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"victron-energy",children:"Victron Energy"}),"\n",(0,a.jsx)(l.Z,{features:"battery-control"}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: victron-energy\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: victron-energy\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: victron-energy\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"youless-energy-monitor",children:"Youless Energy Monitor"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.p,{children:"An externally connected S0 generation meter is required to record the solar production."}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: youless\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: youless\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"zcs-azzurro-inverter-hybrid-inverter",children:"ZCS Azzurro Inverter, Hybrid Inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: sofarsolar\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: sofarsolar\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: sofarsolar\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"zuidwijk-slimmelezer",children:"Zuidwijk SlimmeLezer(+)"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: slimmelezer\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"})}),"\n",(0,a.jsx)(n.h2,{id:"generic-support",children:"Generic support"}),"\n",(0,a.jsx)(n.h3,{id:"custom",children:"Custom"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_meter\n    type: custom\n    power: # power (W)\n      source: # plugin type\n      # ...\n    energy: # optional energy (kWh)\n      source: # plugin type\n      # ...\n    soc: # optional battery soc (%)\n      source: # plugin type\n      # ...\n    currents: # optional currents (A)\n      - source: # L1 plugin type\n        # ...\n      - source: # L2 plugin type\n        # ...\n      - source: # L3 plugin type\n        # ...\n"})}),"\n",(0,a.jsx)(n.h3,{id:"sunspec-battery-model-124",children:"SunSpec Battery (Model 124)"}),"\n",(0,a.jsx)(l.Z,{features:"battery-control"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: sunspec-inverter-control\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})}),"\n",(0,a.jsx)(n.h3,{id:"sunspec-battery-model-802",children:"SunSpec Battery (Model 802)"}),"\n",(0,a.jsx)(l.Z,{features:"battery-control"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: sunspec-battery-control\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})}),"\n",(0,a.jsx)(n.h3,{id:"sunspec-hybrid-inverter",children:"SunSpec Hybrid Inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: sunspec-hybrid\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: sunspec-hybrid\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: sunspec-hybrid\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"sunspec-inverter",children:"SunSpec Inverter"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_grid\n    type: template\n    template: sunspec-inverter\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_pv\n    type: template\n    template: sunspec-inverter\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'meters:\n  - name: my_battery\n    type: template\n    template: sunspec-inverter\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"volksz\xe4hler",children:"Volksz\xe4hler"}),"\n",(0,a.jsx)(n.h4,{id:"http-api",children:"HTTP API"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: volkszaehler-http\n    usage: grid\n    url: # Example: http://zaehler.network.local:8080/api/data (optional)\n    uuid: \n"})}),"\n",(0,a.jsx)(n.h4,{id:"http-api-import--export",children:"HTTP API, Import & Export"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: volkszaehler-importexport\n    usage: grid\n    url: # The URL is for example: http://zaehler.network.local:8080/api/data (optional)\n    importuuid:\n    exportuuid: \n"})}),"\n",(0,a.jsx)(n.h4,{id:"websocket-api",children:"WebSocket API"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: volkszaehler-ws\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 8082 # Port (optional)\n    uuid: \n"})}),"\n",(0,a.jsx)(n.h3,{id:"vzlogger",children:"vzlogger"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: vzlogger\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 8081 # Port (optional)\n    uuid: \n"})}),"\n",(0,a.jsx)(n.h2,{id:"switchable-sockets",children:"Switchable sockets"}),"\n",(0,a.jsx)(n.h3,{id:"avm-fritzdect",children:"AVM FritzDECT"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"pv",label:"PV",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: fritzdect\n    usage: pv\n    uri: https://fritz.box # HTTP(S) address (optional)\n    user: # User account (e.g. email address, user id, etc.)\n    password: # Password of the user account (use single quotes in case of leading zeros)\n    ain: 307788992233 # The AIN is printed on the type label on the back of the device. Embed it in double quotes in case of leading zeroes. \n"})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_charger\n    type: template\n    template: fritzdect\n    usage: charge\n    uri: https://fritz.box # HTTP(S) address (optional)\n    user: # User account (e.g. email address, user id, etc.)\n    password: # Password of the user account (use single quotes in case of leading zeros)\n    ain: 307788992233 # The AIN is printed on the type label on the back of the device. Embed it in double quotes in case of leading zeroes. \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"homematic-ip",children:"Homematic IP"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"pv",label:"PV",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: homematic\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    device: '0001EE89AAD848' # Homematic device id like shown in the CCU web user interface.\n    user: # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_charger\n    type: template\n    template: homematic\n    usage: charge\n    host: 192.0.2.2 # IP address or hostname\n    device: '0001EE89AAD848' # Homematic device id like shown in the CCU web user interface.\n    user: # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"mystrom-switch",children:"myStrom Switch"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"pv",label:"PV",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: mystrom\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_charger\n    type: template\n    template: mystrom\n    usage: charge\n    host: 192.0.2.2 # IP address or hostname \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"shelly-1pm-em-plug-s",children:"Shelly 1PM, EM, Plug S"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"pv",label:"PV",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: shelly-1pm\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    user: # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional)\n    channel: 0 # optional \n"})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_charger\n    type: template\n    template: shelly-1pm\n    usage: charge\n    host: 192.0.2.2 # IP address or hostname\n    user: # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional)\n    channel: 0 # optional \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"tasmota-1-phase-meter",children:"Tasmota (1 Phase Meter)"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: tasmota\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    user: # admin is default (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional)\n    channel: 1 # Meterchannel number (1-8) \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: tasmota\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    user: # admin is default (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional)\n    channel: 1 # Meterchannel number (1-8) \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: tasmota\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    user: # admin is default (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional)\n    channel: 1 # Meterchannel number (1-8) \n"})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_charger\n    type: template\n    template: tasmota\n    usage: charge\n    host: 192.0.2.2 # IP address or hostname\n    user: # admin is default (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional)\n    channel: 1 # Meterchannel number (1-8) \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"tasmota-three-phase",children:"Tasmota three phase"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.p,{children:"Meter channels 1,2,3 must be used."}),"\n",(0,a.jsxs)(r.Z,{children:[(0,a.jsx)(d.Z,{value:"grid",label:"Netz",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_grid\n    type: template\n    template: tasmota-3p\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    user: # admin is default (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"pv",label:"PV",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: tasmota-3p\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    user: # admin is default (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"battery",label:"Batterie",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_battery\n    type: template\n    template: tasmota-3p\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    user: # admin is default (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n"})})}),(0,a.jsx)(d.Z,{value:"charge",label:"Wallbox",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_charger\n    type: template\n    template: tasmota-3p\n    usage: charge\n    host: 192.0.2.2 # IP address or hostname\n    user: # admin is default (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"tp-link",children:"TP-Link"}),"\n",(0,a.jsx)(n.h4,{id:"h-series-smart-plug",children:"H-Series Smart Plug"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: tplink\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"})}),"\n",(0,a.jsx)(n.h4,{id:"tapo-p-series-smart-plug",children:"Tapo P-Series Smart Plug"}),"\n",(0,a.jsx)(l.Z,{features:""}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"meters:\n  - name: my_pv\n    type: template\n    template: tapo\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    user: # User account (e.g. email address, user id, etc.)\n    password: # Password of the user account (use single quotes in case of leading zeros) \n"})})]})}function y(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(g,{...e})}):g(e)}},85162:(e,n,t)=>{t.d(n,{Z:()=>d});t(67294);var a=t(90512);const s={tabItem:"tabItem_Ymn6"};var r=t(85893);function d(e){let{children:n,hidden:t,className:d}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.Z)(s.tabItem,d),hidden:t,children:n})}},74866:(e,n,t)=>{t.d(n,{Z:()=>S});var a=t(67294),s=t(90512),r=t(12466),d=t(16550),l=t(20469),i=t(91980),o=t(67392),m=t(50012);function p(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function c(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:s}}=e;return{value:n,label:t,attributes:a,default:s}}))}(t);return function(e){const n=(0,o.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function u(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:t}=e;const s=(0,d.k6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,i._X)(r),(0,a.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})}),[r,s])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,r=c(e),[d,i]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r}))),[o,p]=h({queryString:t,groupId:s}),[g,y]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,r]=(0,m.Nk)(t);return[s,(0,a.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:s}),v=(()=>{const e=o??g;return u({value:e,tabValues:r})?e:null})();(0,l.Z)((()=>{v&&i(v)}),[v]);return{selectedValue:d,selectValue:(0,a.useCallback)((e=>{if(!u({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),p(e),y(e)}),[p,y,r]),tabValues:r}}var y=t(72389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(85893);function x(e){let{className:n,block:t,selectedValue:a,selectValue:d,tabValues:l}=e;const i=[],{blockElementScrollPositionUntilNextRender:o}=(0,r.o5)(),m=e=>{const n=e.currentTarget,t=i.indexOf(n),s=l[t].value;s!==a&&(o(n),d(s))},p=e=>{let n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>i.push(e),onKeyDown:p,onClick:m,...r,className:(0,s.Z)("tabs__item",v.tabItem,r?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function j(e){let{lazy:n,children:t,selectedValue:s}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function P(e){const n=g(e);return(0,b.jsxs)("div",{className:(0,s.Z)("tabs-container",v.tabList),children:[(0,b.jsx)(x,{...e,...n}),(0,b.jsx)(j,{...e,...n})]})}function S(e){const n=(0,y.Z)();return(0,b.jsx)(P,{...e,children:p(e.children)},String(n))}},38106:(e,n,t)=>{t.d(n,{Z:()=>l});t(67294);var a=t(31976),s=t(85893);function r(e){document.querySelectorAll(".hidden-by-feature-filter").forEach((e=>{e.classList.remove("hidden-by-feature-filter")}));document.querySelector("main");const n=n=>e.every((e=>n.classList.contains(e))),t=(e,n)=>{e.forEach((e=>{n?e.classList.remove("hidden-by-feature-filter"):e.classList.add("hidden-by-feature-filter")}))};let a=document.querySelector("main h2"),s=[],r=[],d=!1,l=!1;for(;a;)"H2"===a.tagName?(t(r,l||d),t(s,d),r=[a],s=[],d=!1,l=!1):"H3"===a.tagName?(t(s,d),d&&(l=!0),s=[a],d=!1):(s.push(a),d||"DIV"!==a.tagName||(d=n(a))),a=a.nextElementSibling,a||(t(s,d),t(r,l||d));document.querySelectorAll("main h2.hidden-by-feature-filter, main h3.hidden-by-feature-filter").forEach((e=>{const n=e.id;document.querySelector(`.table-of-contents__link[href="#${n}"]`).classList.add("hidden-by-feature-filter")}))}const d=[];const l=e=>{let{device:n}=e;const t="charger"===n?a.o:a.Q,l=Object.keys(t);return(0,s.jsx)("div",{className:"features",children:l.map((e=>(0,s.jsx)("button",{className:`feature filter-${e}`,type:"button",onClick:()=>function(e){const n=`feature-${e}`;document.querySelector(":root").classList.toggle(n);const t=d.indexOf(n);-1===t?d.push(n):d.splice(t,1),r(d)}(e),children:t[e]},e)))})}},73304:(e,n,t)=>{t.d(n,{Z:()=>d});t(67294);var a=t(31976),s=t(85893);const r={...a.o,...a.Q};const d=e=>{let{features:n}=e;const t=(n?n.split(","):[]).filter((e=>r[e]));let a="features";return t.forEach((e=>{a+=` feature-${e}`})),(0,s.jsx)("div",{className:a,children:t.map((e=>{return(0,s.jsx)("a",{href:(n=e,"sponsorfree"===n?"../../sponsorship":"#features"),className:"feature",children:r[e]||e},e);var n}))})}},31976:(e,n,t)=>{t.d(n,{Q:()=>d,o:()=>r});t(67294);var a=t(95999),s=t(85893);const r={"1p3p":(0,s.jsx)(a.Z,{children:"1P3P"}),rfid:(0,s.jsx)(a.Z,{children:"RFID"}),mA:(0,s.jsx)(a.Z,{children:"mA Regelung"}),iso151182:(0,s.jsx)(a.Z,{children:"ISO 15118"}),sponsorfree:(0,s.jsx)(a.Z,{children:"ohne Sponsoring"})},d={"battery-control":(0,s.jsx)(a.Z,{children:"aktive Batteriesteuerung"})}},11151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>d});var a=t(67294);const s={},r=a.createContext(s);function d(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);