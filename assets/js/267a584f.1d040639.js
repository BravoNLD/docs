"use strict";(self.webpackChunkevcc_docs=self.webpackChunkevcc_docs||[]).push([[3928],{64995:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var t=r(85893),i=r(11151);const s={sidebar_position:14},o="mqtt",c={id:"reference/configuration/mqtt",title:"mqtt",description:"Stellt die Konnektivit\xe4t mit einem MQTT-Broker her.",source:"@site/docs/reference/configuration/mqtt.md",sourceDirName:"reference/configuration",slug:"/reference/configuration/mqtt",permalink:"/docs/reference/configuration/mqtt",draft:!1,unlisted:!1,editUrl:"https://github.com/evcc-io/docs/tree/main/docs/reference/configuration/mqtt.md",tags:[],version:"current",sidebarPosition:14,frontMatter:{sidebar_position:14},sidebar:"tutorialSidebar",previous:{title:"eebus",permalink:"/docs/reference/configuration/eebus"},next:{title:"influx",permalink:"/docs/reference/configuration/influx"}},l={},d=[{value:"MQTT ohne Verschl\xfcsselung",id:"mqtt-ohne-verschl\xfcsselung",level:2},{value:"MQTT mit TLS-Verschl\xfcsselung",id:"mqtt-mit-tls-verschl\xfcsselung",level:2},{value:"Erforderliche Parameter",id:"erforderliche-parameter",level:2},{value:"<code>broker</code>",id:"broker",level:3},{value:"<code>topic</code>",id:"topic",level:3},{value:"Optionale Parameter",id:"optionale-parameter",level:2},{value:"<code>user</code>",id:"user",level:3},{value:"<code>password</code>",id:"password",level:3},{value:"<code>clientid</code>",id:"clientid",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"mqtt",children:(0,t.jsx)(n.code,{children:"mqtt"})}),"\n",(0,t.jsxs)(n.p,{children:["Stellt die Konnektivit\xe4t mit einem MQTT-Broker her.\nBei bestehender Verbindung pusht evcc automatisch alle internen Werte via MQTT-Broker auf das angegebene Topic und empf\xe4ngt dort auch \xc4nderungen.\nSiehe dazu auch die Dokumentation zur ",(0,t.jsx)(n.a,{href:"/docs/reference/api/#mqtt-api",children:(0,t.jsx)(n.code,{children:"MQTT API"})}),"."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"mqtt-ohne-verschl\xfcsselung",children:"MQTT ohne Verschl\xfcsselung"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Beispiel"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# mqtt message broker\nmqtt:\n  broker: localhost:1883\n  topic: evcc # root topic for publishing, set empty to disable publishing\n  # clientid: foo\n  # user:\n  # password:\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"mqtt-mit-tls-verschl\xfcsselung",children:"MQTT mit TLS-Verschl\xfcsselung"}),"\n",(0,t.jsx)(n.p,{children:"Beispiel:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# mqtt message broker\nmqtt:\n  broker: tls://localhost:8883\n  topic: evcc # root topic for publishing, set empty to disable publishing\n  # clientid: foo\n  # user:\n  # password:\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"erforderliche-parameter",children:"Erforderliche Parameter"}),"\n",(0,t.jsx)(n.h3,{id:"broker",children:(0,t.jsx)(n.code,{children:"broker"})}),"\n",(0,t.jsx)(n.p,{children:"Verbindungsdaten (Hostname/IP und Port) des verwendeten MQTT-Brokers zu dem sich evcc als Client verbinden soll."}),"\n",(0,t.jsx)(n.h3,{id:"topic",children:(0,t.jsx)(n.code,{children:"topic"})}),"\n",(0,t.jsx)(n.p,{children:"Gibt das Wurzeltopic an welches evcc verwendet.\nWenn hier nichts angegeben wird findet keine MQTT-Kommunikation statt!"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"optionale-parameter",children:"Optionale Parameter"}),"\n",(0,t.jsx)(n.h3,{id:"user",children:(0,t.jsx)(n.code,{children:"user"})}),"\n",(0,t.jsx)(n.p,{children:"Der Benutzernamen zur Anmeldung am MQTT-Broker."}),"\n",(0,t.jsx)(n.h3,{id:"password",children:(0,t.jsx)(n.code,{children:"password"})}),"\n",(0,t.jsx)(n.p,{children:"Das Anmeldepasswort am MQTT-Broker."}),"\n",(0,t.jsx)(n.h3,{id:"clientid",children:(0,t.jsx)(n.code,{children:"clientid"})}),"\n",(0,t.jsx)(n.p,{children:"Erlaubt eine feste MQTT-Client ID vorzugegeben. Andernfalls wird diese dynamisch vergeben."})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>c,a:()=>o});var t=r(67294);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);